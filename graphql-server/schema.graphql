### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Certificate {
  achievDate: String
  description: String
  expirationDate: String
  id: Int!
  location: String
  title: String!
  type: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Employee {
  adres: String
  certificates: [Certificate]
  city: String
  email: String
  firstName: String
  function: String
  houseNumber: String
  id: Int!
  lastName: String
  postalCode: String
  vacations: [Vacation]
}

type JwtToken {
  token: String!
}

type Mutation {
  addCertificate(achievDate: String!, employeeId: Int!, expirationDate: String!, location: String!, title: String!, type: String!): Certificate
  addEmployee(adres: String!, city: String!, email: String!, firstName: String!, function: String!, houseNumber: String!, lastName: String!, postalCode: String!): Employee
  addVacation(description: String!, employeeId: Int!, endDate: String!, startDate: String!): Vacation
  createVehicle(description: String!, licensePlate: String, name: String!): Vehicle
  deleteEmployee(id: Int!): Employee
  deleteVacation(id: Int!): Vacation
  login(password: String!, userName: String!): JwtToken
  register(lastName: String!, name: String!, password: String!, userName: String!): User
  updateEmployee(adres: String!, city: String!, email: String!, firstName: String!, function: String!, houseNumber: String!, id: Int!, lastName: String!, postalCode: String!): Employee
}

type Query {
  allUsers: [User!]!
  certificates: [Certificate]
  employee(id: Int): Employee
  employees: [Employee]
  userById(id: Int!): User
  vehicles: [Vehicle]
}

type User {
  admin: Boolean
  id: Int!
  lastName: String
  name: String
  userName: String
}

type Vacation {
  description: String
  endDate: String
  id: Int
  startDate: String
}

type Vehicle {
  certificates: [Certificate]
  description: String
  id: Int!
  licensePlate: String
  name: String!
}
